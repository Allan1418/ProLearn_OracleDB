CREATE TABLE FIDE_PROLEARN_FINAL_PROF.TESTI (
  PARA VARCHAR2(2)
);

--Crea la secuencia para la tabla de facturas
CREATE SEQUENCE FIDE_PROLEARN_FINAL_PROF.ID_FACTURA_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE;

--Crea la tabla de facturas
CREATE TABLE FIDE_PROLEARN_FINAL_PROF.FACTURA_TB (
    FACTURA_TB_ID_FACTURA_PK NUMBER PRIMARY KEY,
    USUARIO_ID NUMBER,
    MONTO NUMBER(10, 2) NOT NULL,
    FECHA_PAGO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FECHA_EXPIRACION TIMESTAMP,
    LAST_UPDATE_BY VARCHAR2(100),
    LAST_UPDATE_DATE DATE,
    CREATED_BY VARCHAR2(100),
    CREATION_DATE DATE,
    ACCION VARCHAR2(100),
    CONSTRAINT FK_FACTURA_USUARIO FOREIGN KEY (USUARIO_ID) 
        REFERENCES FIDE_PROLEARN_FINAL_PROF.FIDE_USUARIOS_TB(USUARIOS_TB_ID_USER_PK)
);

--Crea el trigger para insertar el valor del secuenciador en la tabla de facturas
CREATE OR REPLACE TRIGGER FIDE_PROLEARN_FINAL_PROF.ID_FACTURA_TRG
BEFORE INSERT ON FIDE_PROLEARN_FINAL_PROF.FACTURA_TB
FOR EACH ROW
BEGIN
    :NEW.FACTURA_TB_ID_FACTURA_PK := FIDE_PROLEARN_FINAL_PROF.ID_FACTURA_SEQ.NEXTVAL;
END;
/

--Crea el trigger de auditor√≠a para la tabla de facturas
CREATE OR REPLACE TRIGGER FIDE_PROLEARN_FINAL_PROF.FACTURA_TB_AUDIT_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROLEARN_FINAL_PROF.FACTURA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATED_BY := USER;
        :NEW.CREATION_DATE := SYSTIMESTAMP;
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.LAST_UPDATE_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSTIMESTAMP;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/





