
/*USUARIO*/



-- Se creo la vista de las categorias que estan en estado 1

CREATE OR REPLACE VIEW FIDE_PROLEARN_FINAL_PROF.FIDE_USUARIO_V AS
 SELECT 
    USUARIOS_TB_ID_USER_PK,
    NOMBRE,
    APELLIDOS,
    EMAIL,
    PASSWORD
  FROM  FIDE_PROLEARN_FINAL_PROF.FIDE_USUARIOS_TB
  WHERE ESTADO_DELET_USUARIOS = 1;
/


CREATE OR REPLACE VIEW FIDE_PROLEARN_FINAL_PROF.FIDE_ROL_V AS
SELECT 
    ROL_TB_ID_ROL_PK,
    NOMBRE
FROM 
    FIDE_PROLEARN_FINAL_PROF.FIDE_ROL_TB
WHERE 
    ESTADO_DELET_ROL = 1;
/


CREATE OR REPLACE VIEW FIDE_PROLEARN_FINAL_PROF.FIDE_USUARIO_ROL_V AS
SELECT 
    USUARIO_ID,
    ROL_ID
FROM 
    FIDE_PROLEARN_FINAL_PROF.FIDE_USUARIO_ROL_TB
WHERE 
    ESTADO_DELET_USUARIO_ROL = 1;
/

CREATE OR REPLACE PROCEDURE FIDE_PROLEARN_FINAL_PROF.ROLES_POR_USUARIO_SP(
    P_USUARIO_ID IN NUMBER,
    P_CURSOR OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN P_CURSOR FOR
    SELECT * 
    FROM 
        FIDE_PROLEARN_FINAL_PROF.FIDE_ROL_V RV
        JOIN FIDE_PROLEARN_FINAL_PROF.FIDE_USUARIO_ROL_V URV
            ON RV.ROL_TB_ID_ROL_PK = URV.ROL_ID
    WHERE 
        URV.USUARIO_ID = P_USUARIO_ID;
END;
/


-- Procedimiento para buscar un usuario mediante su email con su estado en 1

CREATE OR REPLACE PROCEDURE FIDE_PROLEARN_FINAL_PROF.USUARIO_GET_BY_EMAIL_SP(
  P_EMAIL IN VARCHAR2,
  P_CURSOR OUT SYS_REFCURSOR
) AS
BEGIN
  OPEN P_CURSOR FOR
  SELECT * FROM FIDE_PROLEARN_FINAL_PROF.FIDE_USUARIO_V
  WHERE EMAIL = P_EMAIL;
END;
/

-- Procedimiento para buscar todos los usuarios en la tabal con su estado en 1

CREATE OR REPLACE PROCEDURE FIDE_PROLEARN_FINAL_PROF.USUARIO_FINDALL_SP(
  P_CURSOR OUT SYS_REFCURSOR
) AS
BEGIN
  OPEN P_CURSOR FOR
  SELECT * FROM FIDE_PROLEARN_FINAL_PROF.FIDE_USUARIO_V;
END;
/


-- Procedimiento para eliminar un usuario

CREATE OR REPLACE PROCEDURE FIDE_PROLEARN_FINAL_PROF.USUARIO_DELET_SP(
  p_id_usuario IN NUMBER
) AS
BEGIN
  UPDATE FIDE_USUARIOS_TB
  SET ESTADO_DELET_USUARIOS = 0
  WHERE USUARIOS_TB_ID_USER_PK = p_id_usuario;
  COMMIT;
END;
/


-- Este procedimiento tiene un parï¿½metro adicional P_ID_USUARIO que indica si se debe crear un nuevo usuario
-- (si es 0) o actualizar uno existente (si es un valor diferente de 0).

CREATE OR REPLACE PROCEDURE FIDE_PROLEARN_FINAL_PROF.USUARIO_UPSERT_SP(
  P_ID_USUARIO IN NUMBER,
  P_NOMBRE IN VARCHAR2,
  P_APELLIDOS IN VARCHAR2,
  P_EMAIL IN VARCHAR2,
  P_PASSWORD IN VARCHAR2
) AS
    V_ID_NUEVO_USUARIO NUMBER;
BEGIN
  IF P_ID_USUARIO = 0 THEN
    INSERT INTO FIDE_USUARIOS_TB (
      NOMBRE,
      APELLIDOS,
      EMAIL,
      PASSWORD
    ) VALUES (
      P_NOMBRE,
      P_APELLIDOS,
      P_EMAIL,
      P_PASSWORD
    )RETURNING USUARIOS_TB_ID_USER_PK INTO V_ID_NUEVO_USUARIO;
    
    INSERT INTO FIDE_PROLEARN_FINAL_PROF.FIDE_USUARIO_ROL_TB(
      USUARIO_ID,
      ROL_ID
    )
    VALUES(
    V_ID_NUEVO_USUARIO,
    1
    );
    
  ELSE
    UPDATE FIDE_USUARIOS_TB
    SET NOMBRE = P_NOMBRE,
        APELLIDOS = P_APELLIDOS,
        EMAIL = P_EMAIL,
        PASSWORD = P_PASSWORD
    WHERE USUARIOS_TB_ID_USER_PK = P_ID_USUARIO;
  END IF;
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
END;
/

--------- \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\--------

/*USUARIO_ROL*/

