CREATE TABLE FIDE_PROLEARN_FINAL_PROF.TESTI (
  PARA VARCHAR2(2)
);

/*CATEGORIAS*/


--Se busaca el ID de Categoria
CREATE OR REPLACE PROCEDURE FIDE_PROLEARN_FINAL_PROF.CATEGORIA_FINDBYID_SP(
    P_ID_CATEGORIA IN NUMBER,
    P_CATEGORIA OUT SYS_REFCURSOR
)IS
BEGIN
    OPEN P_CATEGORIA FOR
    SELECT CATEGORIAS_TB_ID_CAT_PK, NOMBRE_CATEGORIA 
    FROM FIDE_PROLEARN_FINAL_PROF.FIDE_CATEGORIAS_TB 
    WHERE CATEGORIAS_TB_ID_CAT_PK = P_ID_CATEGORIA;
    
    INSERT INTO FIDE_PROLEARN_FINAL_PROF.TESTI (PARA) VALUES ('A');
    COMMIT;
    
EXCEPTION
    WHEN NO_DATA_FOUND THEN P_CATEGORIA := NULL;

END;
/



--Procedimiento para crear una categoria

CREATE OR REPLACE PROCEDURE FIDE_PROLEARN_FINAL_PROF.CATEGORIA_SAVE_SP(
  P_NOMBRE_CATEGORIA VARCHAR2
) IS
BEGIN

  INSERT INTO FIDE_PROLEARN_FINAL_PROF.FIDE_CATEGORIAS_TB (
    NOMBRE_CATEGORIA
  ) VALUES (
    P_NOMBRE_CATEGORIA
  );
  
  COMMIT;
END;
/




/*CURSOS*/

---Se obtiene el curso mediante el ID

CREATE OR REPLACE PROCEDURE FIDE_PROLEARN_FINAL_PROF.GET_CURSO_BY_ID_SP(
  P_ID_CURSO IN NUMBER,
  P_CURSOS OUT SYS_REFCURSOR
)
AS
BEGIN
  OPEN P_CURSOS FOR
    SELECT 
        CURSOS_TB_ID_CUR_PK,
        NOMBRE_CURSO,
        DESCRP_CURSO,
        THUMBNAIL_CURSO,
        CATEGORIA_CURSO,
        ESTADO_CURSO
    FROM FIDE_CURSOS_TB
    WHERE CURSOS_TB_ID_CUR_PK = P_ID_CURSO
    AND ESTADO_CURSO =1;
END;
/

-- Procedimiento para agregar un curso

CREATE OR REPLACE PROCEDURE FIDE_PROLEARN_FINAL_PROF.CREAR_CURSO(
  P_NOMBRE_CURSO VARCHAR2,
  P_DESCRIPCION_CURSO VARCHAR2,
  P_THUMBNAIL_CURSO VARCHAR2,
  P_CATEGORIA_CURSO INT
) AS
BEGIN
  INSERT INTO FIDE_CURSOS_TB (
    NOMBRE_CURSO,
    DESCRP_CURSO,
    THUMBNAIL_CURSO,
    CATEGORIA_CURSO
  ) VALUES (
    P_NOMBRE_CURSO,
    P_DESCRIPCION_CURSO,
    P_THUMBNAIL_CURSO,
    P_CATEGORIA_CURSO
  );
END;
/


-- Procedimiento para actualizar un curso en especifico

CREATE OR REPLACE PROCEDURE FIDE_PROLEARN_FINAL_PROF.MODIFICAR_CURSO_SP(
  P_ID_CURSO IN NUMBER,
  P_NOMBRE_CURSO IN VARCHAR2,
  P_DESCRP_CURSO IN VARCHAR2,
  P_THUMBNAIL_CURSO IN VARCHAR2,
  P_CATEGORIA_CURSO IN INT
) AS
BEGIN
  UPDATE FIDE_PROLEARN_FINAL_PROF.FIDE_CURSOS_TB
  SET NOMBRE_CURSO = P_NOMBRE_CURSO,
      DESCRP_CURSO = P_DESCRP_CURSO,
      THUMBNAIL_CURSO = P_THUMBNAIL_CURSO,
      CATEGORIA_CURSO = P_CATEGORIA_CURSO
  WHERE CURSOS_TB_ID_CUR_PK = P_ID_CURSO;
END;
/



-- Procedimiento para actualizar el estao del curso

CREATE OR REPLACE PROCEDURE FIDE_PROLEARN_FINAL_PROF.ACTUALIZAR_ESTADO_CURSO(
  P_ID_CURSO NUMBER,
  P_ESTADO_CURSO NUMBER
)
AS
BEGIN
  UPDATE FIDE_PROLEARN_FINAL_PROF.FIDE_CURSOS_TB
  SET ESTADO_CURSO = P_ESTADO_CURSO
  WHERE CURSOS_TB_ID_CUR_PK = P_ID_CURSO;
  
  COMMIT;
END;
/


BEGIN
    FIDE_PROLEARN_FINAL_PROF.ACTUALIZAR_ESTADO_CURSO(1,0);
END;
/

-- Procedimiento para listar todos los cursos

CREATE OR REPLACE PROCEDURE OBTENER_CURSOS_ACTIVOS(
  P_CURSOR OUT SYS_REFCURSOR
)
AS
BEGIN
  OPEN P_CURSOR FOR
  SELECT 
    CURSOS_TB_ID_CUR_PK,
    NOMBRE_CURSO,
    DESCRP_CURSO,
    THUMBNAIL_CURSO,
    CATEGORIA_CURSO,
    ESTADO_CURSO
  FROM 
    FIDE_PROLEARN_FINAL_PROF.FIDE_CURSOS_TB
  WHERE 
    ESTADO_CURSO = 1;
END;
/



/*CAPITULO_X_CURSO*/

